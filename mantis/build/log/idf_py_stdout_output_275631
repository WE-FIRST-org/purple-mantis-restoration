[1/10] Performing build step for 'bootloader'
[1/1] cd /home/jimmy/code/purple-mantis-restoration/mantis/build/bootloader/esp-idf/esptool_py && /home/jimmy/.espressif/python_env/idf5.1_py3.11_env/bin/python /home/jimmy/code/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/jimmy/code/purple-mantis-restoration/mantis/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/jimmy/code/purple-mantis-restoration/mantis/build/main.bin
[9/10] cd /home/jimmy/code/purple-mantis-restoration/mantis/build/esp-idf/esptool_py && /home/jimmy/.espressif/python_env/idf5.1_py3.11_env/bin/python /home/jimmy/code/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jimmy/code/purple-mantis-restoration/mantis/build/partition_table/partition-table.bin /home/jimmy/code/purple-mantis-restoration/mantis/build/main.bin
main.bin binary size 0x2fe10 bytes. Smallest app partition is 0x100000 bytes. 0xd01f0 bytes (81%) free.
[9/10] cd /home/jimmy/code/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/jimmy/code/esp-idf -D "SERIAL_TOOL=/home/jimmy/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/home/jimmy/code/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/jimmy/code/purple-mantis-restoration/mantis/build -P /home/jimmy/code/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a4:cf:12:9a:f2:04
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16684...
Writing at 0x00001000... (50 %)
Writing at 0x0000768f... (100 %)
Wrote 26640 bytes (16684 compressed) at 0x00001000 in 0.8 seconds (effective 283.7 kbit/s)...
Hash of data verified.
Compressed 196112 bytes to 107093...
Writing at 0x00010000... (14 %)
Writing at 0x0001d18b... (28 %)
Writing at 0x00022afe... (42 %)
Writing at 0x00028a69... (57 %)
Writing at 0x0002ee96... (71 %)
Writing at 0x00036e33... (85 %)
Writing at 0x0003c99e... (100 %)
Wrote 196112 bytes (107093 compressed) at 0x00010000 in 2.5 seconds (effective 626.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 647.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
